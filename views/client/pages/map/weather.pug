doctype html
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title= title
    script(src="https://cdn.jsdelivr.net/npm/@goongmaps/goong-js@1.0.9/dist/goong-js.js")
    script(src="https://cdn.jsdelivr.net/npm/sweetalert2@11")
    link(rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@goongmaps/goong-js@1.0.9/dist/goong-js.css")
    link(rel="stylesheet", href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.1/css/all.min.css")
    link(rel="stylesheet", href="/css/style.css")

  body
    div#d_icon.des_icon
        button#hid_chuthich 
            i.fa-solid.fa-x
        h4(style="text-align: center;") Chú thích
        div
            div#weather-icons-container
    button#move-to-location-btn
        i.fa-solid.fa-location-crosshairs
    button#show_chuthich(style="display: none") Xem chú thích
    button#show_chuthich_desk 
        i.fa-solid.fa-bars
    div#map(style="width: 100%; height: 100vh;")
    
    script.
        const Toast = Swal.mixin({
            toast: true,
            position: "top-end",
            showConfirmButton: false,
            timer: 5000,
            timerProgressBar: true,
            didOpen: (toast) => {
                toast.addEventListener("mouseenter", Swal.stopTimer);
                toast.addEventListener("mouseleave", Swal.resumeTimer);
                toast.addEventListener("click", Swal.close);
            },
        });
    
      const maptitleskey = !{maptitleskey};
      const APIKey = !{APIKey};

      goongjs.accessToken = maptitleskey;
      let userCoords = null;
      let userMarker = null;
      let dest = null;

      const map = new goongjs.Map({
          container: 'map',
          style: 'https://tiles.goong.io/assets/goong_map_web.json',
          center: [105.83991, 21.02800],
          zoom: 7,
      });

        const fullscreenControl = new goongjs.FullscreenControl();
        map.addControl(fullscreenControl, 'top-right');

        document.addEventListener('DOMContentLoaded', () => {

            map.on('load', () =>{

                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        (position) => {
                            userCoords = [position.coords.longitude, position.coords.latitude];
                            map.flyTo({
                                center: userCoords,
                                zoom: 8
                            })
                        },
                        (error) => {
                            console.error('Lỗi lấy vị trí:', error);
                            Toast.fire({
                                icon: 'info',
                                title: 'Đang lấy vị trí hiện tại! Vui lòng cấp quyền vị trí nếu bạn chưa thực hiện'
                            })
                        },
                        {
                            enableHighAccuracy: true,
                            maximumAge: 0,
                            timeout: 10000,
                        }
                    )
                };
                const APIKeyWeather = "345d6e1b15e8df12ea3394ccf0cb784d";
                const locations = [
                    { lat: 21.028511, lng: 105.804817, name: "Hanoi" },
                    { lat: 16.054407, lng: 108.202167, name: "Danang" }
                ];

                fetch('/assets/tinh.json')
                .then(response => response.json())
                .then(data => {
                    data.forEach(prov => {
                        const weatherUrl = `https://api.openweathermap.org/data/2.5/weather?lat=${prov.lat}&lon=${prov.lng}&appid=${APIKeyWeather}&units=metric&lang=vi`;

                        fetch(weatherUrl)
                        .then(response => response.json())
                        .then(data => {
                            const iconCode = data.weather[0].icon;
                            const weatherDescription = data.weather[0].description;
                            const temperature = data.main.temp;
                            const humidity = data.main.humidity;

                            // Tạo Marker với Icon thời tiết
                            const marker = new goongjs.Marker({
                                element: createWeatherMarker(iconCode)})
                                .setLngLat([prov.lng, prov.lat])
                                .addTo(map);

                            marker.getElement().addEventListener('mouseenter', () => {
                                marker.getElement().style.cursor = 'pointer';
                                const popup = new goongjs.Popup().setHTML(`<h3>${prov.name}</h3><h3>Nhiệt độ: ${temperature}&deg;C</h3><h3>Độ ẩm: ${humidity}</h3>`);
                                marker.setPopup(popup).togglePopup();
                            })

                            marker.getElement().addEventListener('mouseleave', () => {
                                marker.getElement().style.cursor = 'default';
                                marker.getPopup().remove();
                            });
                        })
                        .catch(err => console.error("Lỗi khi lấy dữ liệu thời tiết:", err));
                    });
            })


            function createWeatherMarker(iconCode) {
                const element = document.createElement('div');
                element.className = 'weather-marker';
                element.style.backgroundImage = `url(http://openweathermap.org/img/wn/${iconCode}@2x.png)`;
                element.style.width = '50px';
                element.style.height = '50px';
                element.style.backgroundSize = 'cover';
                return element;
            }
        
            document.getElementById('move-to-location-btn').addEventListener('click', () => {
                if (userCoords) {
                    map.flyTo({
                        center: userCoords,
                        zoom: 8,
                    });
                } else {
                    Toast.fire({
                        icon: 'info',
                        title: 'Đang lấy vị trí hiện tại! Vui lòng cấp quyền vị trí nếu bạn chưa thực hiện'
                    })
                }
            });
        })

        fetch('/assets/weather_icons.json')
            .then(response => response.json())
            .then(data => {
                const container = document.getElementById('weather-icons-container');
                data.forEach(icon => {
                    const iconContainer = document.createElement('div');
                    iconContainer.style.margin = '10px';
                    iconContainer.style.textAlign = 'center';
                    iconContainer.style.display = 'flex';
                    iconContainer.style.alignItems = 'center'

                    const dayIcon = document.createElement('img');
                    dayIcon.src = `http://openweathermap.org/img/wn/${icon.day_icon}`;
                    dayIcon.alt = icon.description;
                    dayIcon.title = "Ban ngày: " + icon.description;

                    const nightIcon = document.createElement('img');
                    nightIcon.src = `http://openweathermap.org/img/wn/${icon.night_icon}`;
                    nightIcon.alt = icon.description;
                    nightIcon.title = "Ban đêm: " + icon.description;

                    const label = document.createElement('span');
                    label.textContent = icon.description;

                    iconContainer.appendChild(dayIcon);
                    iconContainer.appendChild(nightIcon);
                    iconContainer.appendChild(label);
                    container.appendChild(iconContainer);
                })
            })


            if (window.innerWidth < 768) {
                document.getElementById('d_icon').classList.remove('des_icon');
                document.getElementById('d_icon').classList.add('des_icon_mobi');
                document.getElementById('show_chuthich').style.display = '';
                document.getElementById('show_chuthich_desk').style.display = 'none';
                document.getElementById('show_chuthich').addEventListener('click', () =>{
                    document.getElementById('d_icon').style.bottom = '0';
                })

                document.getElementById('hid_chuthich').addEventListener('click', () =>{
                    document.getElementById('d_icon').style.bottom = '-900px';
                })
            } else {
                document.getElementById('hid_chuthich').addEventListener('click', () =>{
                    document.getElementById('d_icon').style.left = '-500px';
                })
                document.getElementById('show_chuthich_desk').addEventListener('click', () =>{
                    document.getElementById('d_icon').style.left = '0';
                })
            }

        })//end load